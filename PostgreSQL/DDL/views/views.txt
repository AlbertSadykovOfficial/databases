

		Предтавления

				Представление - сохраненный запрос к БД (как функция)


				Положительные стороны:

						1. Упрощение разграничения полномочий пользователя к данным

							 Разным типам пользователей могут требоваться ращличные данные,
							 хранящиеся в одних и тех же таблицах.
							 Создание различных представлений для разных пользователей 
							 избавляетот необходимости создавать дополнительные таблицы
							 и упрощает организацию системы управления доступа к данным.

						2. Уменьшение строк кода, удобочитаемость, облегчение модификаций

						3. Снижение зависимости прикладных программистов от изменений структуры БД.

								В процессе поддержкания проекта может возникнуть потребность в
								переименовке, изменении типа данных и порядка их следования.

								Стоблцы представления - лишь интерфейс к запросу. Поэтому, если
								произойдет изменение структуры, то нужно будет подправить лишь
								запрос в представлении, а не везде, где используется это представление.

						4. Снижение времени запроса за счет использования материализованных представлений.

								В материализиованных представлениях можно сохранять запросы, которые
								формируются длительнео время, при этом допускается их формирование заранее,
								а не в момент потребности.

								Конечно, так как эти запросы собирают данные разово, то с необходимой 
								периодичностью их надо обновлять командой REFRESH.


						В БД "Авиаперевозке" создано представление flights_v на основе таблицы "Рейсы"

				Удалить представление:
						
						DROP VIEW <имя-представления>
						DROP VIEW IF EXISTS <имя-представления>


				Создать представление:

						CREATE VIEW <имя-представления> [(<имя-столбца>[, ...])] 
							AS <запрос>


						Пример (посчитать кол-во мест для всех моделей самолетов с учетом класса):

								CREATE VIEW seats_by_fare_cond 
								AS
										SELECT aircraft_code,
													 fare_conditions,
													 count ( * )
											FROM seats
											GROUP BY aircraft_code, fare_conditions
											ORDER BY aircraft_code, fare_conditions; 

								Теперь, чтобы получить этот результат, требуется ввести команду:

										SELECT * FROM seats_by_fare_cond;

				Изменение представления:

						В PostgreSQL можно изменить представление командой (OR REPLACE), не удаляя его,
						при условии, что не изменяются имена столбцов или не выставляются псевдонимы.
						В ином случае требуется сначала удалить представление.

						Пример:

								DROP VIEW seats_by_fare_cond;

								CREATE OR REPLACE VIEW seats_by_fare_cond 
								AS
										SELECT a.model,
													 s.aircraft_code,
													 s.fare_conditions,
													 count( * ) AS num_seats
											FROM seats
											GROUP BY aircraft_code, fare_conditions
											ORDER BY aircraft_code, fare_conditions;