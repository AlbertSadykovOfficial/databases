

		Serializable - Высший уровень изоляции 

				СУТЬ:
						Транзакции могуть выполняться параллельно точно так же, как если бы они выполнялись
						послежователно одна за другой.
						Однако как и при использовании Repeatable Read приложение должно быть готово к перезапуску
						транзакции, которая бла прервана системой из-за обнаружения зависимостей чеиения/записи.

						Группа транзакций может быть выполнена и зафиксирована в том случае, 
						когда результат их параллельного выполнения = результату выполнения транзакций при выборе
						одного из возможных вариантов их упорядочения, если бы они выполнялись одна за другой.


				Для демонстрации создадим таблицу modes с 2мя столбцами:
						
						1) Числовой 
						2) Текстовый

				
				Создадим
						
						CREATE TABLE modes (num integer, mode text);

				Добавим в таблицу 2 строки:

						INSERT INTO modes VALUES ( 1, 'LOW' ), ( 2, 'HIGH' )


				Начнем транзакцию И обновим значения:

						RETURNING * - для того, тчобы постмотреть все изменения.

						Терминал №1
		
								BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;

								UPDATE modes
									 SET mode = 'HIGH'
								 WHERE mode = 'LOW'
								 RETURNING *;

								 (Результат : 1 HIGH)
						
						Терминал №2
		
								BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;

								UPDATE modes
									 SET mode = 'LOW'
								 WHERE mode = 'HIGH'
								 RETURNING *;

								 (Результат : 2 LOW)

								 Изменение, произведенное в 1й транзакции, 2я транзакция не видит,
								 посколько каждая транзакция работает с первоначальным снимком.
								 Поэтому обновляется только 1 строка, 
								 та, в которой значение mode было равно HIGH изначально.


							(При этом обе команды UPDATE были выполнены и ни одна не ждет завершения другой)

							Проверим что получилось в транзакциях

									Терминал №1:

											SELECT * FROM mades; 

											Резульат:
											num mode
											 2	HIGH
											 1	HIGH

									Терминал №2:

											SELECT * FROM mades; 

											Резульат:
											num mode
											 1	LOW
											 2	LOW

							Завершим:

									Терминал №1:

											COMMIT;

									Терминал №2:

											COMMIT;
											(
													ОШИБКА:
													Не удалось сериализвать доступ из-за зависимостей чтения/записи между транзакциями
											)


									(БУДЕТ зафиксировано то изменение транзакция которого выполнила 1й фиксацию изменений.)

											SELECT * FROM modes;
											
											Резульат:
											num mode
											 2	HIGH
											 1	HIGH

									ТАКИМ ОБРАЗОМ:

											Параллельное выполнение 2х транзакций сриализовать не удалось.

											ПОТОМУ ЧТО:

													Если бы была зафиксирована и вторая транзакция, тогда в таблице modes были бы такие строки:

															num mode
															 1	HIGH
															 2	LOW

													НО! Такой результат не соответствует результату ни при одном из возможных результатов упорядочения,
															ЕСЛИ БЫ они выполнялись ПОСЛЕДОВАТЕЛЬНО.

													С точки зения сериализации транзакции невозможно сериализовать.
													Доказательство - проведение этих транзакций последовательно:

															Терминал №1:

																	BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
									
																	UPDATE modes
																		 SET mode = 'HIGH'
																	 WHERE mode = 'LOW'
																	 RETURNING *;

																	 END;

	
															Терминал №2:

																	BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
									
																	UPDATE modes
																		 SET mode = 'LOW'
																	 WHERE mode = 'HIGH'
																	 RETURNING *;

																	 END;


															Результат:	
																	
																	SELECT * FROM modes;

																	num mode 
																	 2	LOW
																	 1	LOW

															Результат (если поменять местами выполнение транзакций):

																	SELECT * FROM modes;

																	num mode
																	 1	HIGH
																	 2	HIGH

															Результат, который должен быть:

																	num mode
																	 1	HIGH
																	 2	LOW


