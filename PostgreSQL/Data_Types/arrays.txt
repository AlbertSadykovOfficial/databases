		
		Массивы

			В значение ячейки можно вставлять данные в виде массивов, 
			Так они будут иметь поддержку нативных функций работы с массивами

			Создать столбец - массив:

					CREATE TABLE pilots
					(
							pilot_name text,
							schedule integer[]
					);

			Поместить данные:

					INSERT INTO pilots
						VALUES ( 'Ivan', 	'{ 1, 3, 5, 6, 7 }'::integer[]),
									 ( 'Petr', 	'{ 1, 2, 5, 7,   }'::integer[]),
									 ( 'Pavel', '{ 2, 5,         }'::integer[]),
									 ( 'Boris', '{ 3, 5, 6       }'::integer[]);

			Изменение данных:

				Поставим данные сделать 4 дневную рабочую неделю для каждого пилота,
				продемонстрировав возможности работы


				Добавить данные конкатетацией:

						UPDATE pilots SET schedule = schedule || 7 WHERE pilot_name = 'Boris';

				Добавить данные в конец списка (append):

						UPDATE pilots SET schedule = array_append(shedule, 6) WHERE pilot_name = 'Pavel';

				Добавить данные в начало списка (prepend):

						UPDATE pilots SET schedule = array_prepend(1, shedule) WHERE pilot_name = 'Pavel';

				Удалить данные (remove):

						UPDATE pilots SET schedule = array_remove(shedule, 5) WHERE pilot_name = 'Ivan';

				Изменить дни перелетов:

						UPDATE pilots SET schedule[1] = 2, schedule[1] = 3 WHERE pilot_name = 'Petr';
						(АЛЬТЕРНАТИВА)
						UPDATE pilots SET schedule[1:2] = ARRAY[2,3] WHERE pilot_name = 'Petr';


			Выбрать данные:

					# Получить список пилотов, летающих по средам
					SELECT * FROM pilots WHERE array_position( schedule, 3 ) IS NOT NULL;

					# Проверить, что в левом массиве имеются значения правого массива
					SELECT * FROM pilots WHERE schedule @> '{ 1, 7 }'::integer[];

					# Кто не летает ни во вторник, ни в пятницу:
					SELECT * FROM pilots WHERE ( schedule && ARRAY[ 2, 5 ] );

					# Разверуть массив в столбец:
					SELECT unnest ( schedule ) AS days_of_week FROM pilots WHERE pilot_name = 'Ivan';