

		Многотабличные запросы

				Определить число пассажиров, не пришедших на регистрацию билетов, а значит и не вылетевших.

						# Скобки при FROM -> () заставляют присоединять таблицы слева на право
						# в примере это не важно, просто, для демонстрации возможностей.

						SELECT count( * )
							FROM (
										ticket_flights t
										JOIN flights f ON t.flight_id = f.flight_id
									 )
							LEFT OUTER JOIN boarding_passes b
								ON t.ticket_no = b.ticket_no AND t.flight_id = b.flight_id
						 WHERE f.actual_departure IS NOT NULL AND b.flight_id IS NULL;


				Сложный пример, включающий 5 таблиц:

						(Необходимо проверить все случаи несовпадения классов обслуживания (такое может случиться при сбое))
						+ Вывести всю попутную информацию (чтобы усложнить запрос)

						Таблицы:

								1) Перелеты (ticket_flights)- класс обсуживания
								2) Посадочные талоны (boarding_passes)
								3) Места (seats) - Содержат класс, но им нужно место и код самолетом.
									 (Место из посадочного талона, самолет из рейсов) 
								4) Рейсы (flights) - дают код можели самолета, чтобы опреедлить класс
								5) Билеты (tickets)- Таблица для усложнения (получить имя и фамилию)
								   (связываем ее с таблицей ticket_flights по Номеру билета (ticket_no))

								В качестве базовой таблицы выберем (boarding_passes), далее послежжовательно будем все подклбчать к ней
								Условия WHERE после выбора будет одно - НЕ совпадение классов обслуживания


										SELECT f.flight_no
													 f.scheduled_departure
													 f.flight_id,
													 f.departure_airport,
													 f.arrival_airport,
													 f.aircraft_code,
													 t.passenger_name,
													 tf.fare_conditions AS fc_to_be,
													 s.fare_condetions AS fc_fact,
													 b.seat_no
											FROM boarding passes b
											JOIN ticket_flights tf
												ON b.ticket_no = tf.ticket_no AND b.flight_id = tf.flight_id
											JOIN tickets t ON tf.ticket_no = t.ticket_no
											JOIN flights f ON tf.flight_id = f.flight_id
											JOIN seats s
												ON b.seat_no = s.seat_no AND f.aircraft_code = s.aircraft_code
										 WHERE tf.fare_conditions <> s.fare_conditions
										 ORDER BY f.flight_no, f.scheduled_departure;


										Чтобы справоцировать запрос, стоит изменить таблицу:

												UPDATE boarding_passes
													 SET seat_no = '1A'
												 WHERE flight_id = 1 AND seat_no = '17A';